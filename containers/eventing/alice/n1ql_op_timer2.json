{
      "appcode": "function OnUpdate(doc, meta) {\n    var expiry = new Date();\n    expiry.setSeconds(expiry.getSeconds() + 30);\n    var context = {docID : meta.id, random_text : \"e6cZZGHuh0R7Aumoe6cZZGHuh0R7Aumoe6cZZGHuh0R7Aumoe6cZZGHuh0R7Aumoe6cZZGHuh0R7Aumoe6cZZGHuh0R7Aumoe6cZZGHuh0R7Aumoe6cZZGHuh0R7Aumoe6cZZGHuh0R7Aumoe6cZZGHuh0R7Aumoe6cZZGHuh0R7Aumoe6cZZGHuh0R7Aumoe6cZZGHuh0R7Aumoe6cZZGHuh07Aumoe6cZZGHuh07Aumoe6cZZGHuh07Aumoe6\"};\n    createTimer(timerCallback,  expiry, meta.id, context);\n}\nfunction OnDelete(meta) {\n    var expiry = new Date();\n    expiry.setSeconds(expiry.getSeconds() + 30);\n    var context = {docID : meta.id};\n    createTimer(NDtimerCallback,  expiry, meta.id, context);\n}\nfunction NDtimerCallback(context) {\n    var docID = context.docID;\n   while (true) {\n    try {\n        var query = select AVG(rating),MIN(rating),MAX(rating) from `default` where rating >= 400 and rating <= 600;\n        for( var row of query){ \n            delete dst_bucket[docID];\n        }\n        break;\n    } catch (e) {\n        log(e);\n        }\n    }\n}\n\nfunction timerCallback(context) {\n    var docID = context.docID;\n    while(true) {\n        try {\n        var query = select AVG(rating),MIN(rating),MAX(rating) from `default` where rating >= 400 and rating <= 600;\n        for( var row of query){ \n            dst_bucket[docID]=row;\n        }\n        break;\n        }\n   catch (e) {\n        log(e);\n        }\n    }\n}",
        "depcfg": {
            "buckets": [
                {
                    "alias": "dst_bucket",
                    "bucket_name": "n1ql_op_timer_dst2"
                }
            ],
            "metadata_bucket": "metadata",
            "source_bucket": "default"
        },
      "appname": "n1ql_op_timer2",
      "settings": {
          "dcp_stream_boundary": "everything",
          "deadline_timeout": 62,
          "execution_timeout": 60,
          "log_level": "INFO",
          "processing_status": false,
          "deployment_status": false
      }
}