---
-
  include: tests/templates/rebalance.yml, tests/templates/fts.yml, tests/templates/kv.yml

# start json and binary data loading
-
   template: pillowfight
   args: "{{.Orchestrator}}, {{.NthBucket 1}}, -B {{.Scale 100}} -I {{.Scale 100000}} --json -t 1 -u Administrator, {{.AuthPassword}}"
-
   template: pillowfight
   args: "{{.Orchestrator}}, {{.Bucket}}, -B {{.Scale 100}} -I {{.Scale 100000}} -t 1, {{.AuthPassword}} --json"
-
   image: sequoiatools/gideon
   command: "kv --ops {{.Scale 1000}} --create 10 --get 90 --expire 20 --ttl 600  --hosts {{.Orchestrator}} --bucket {{.NthBucket 1}} --sizes 16000"
-
   command: "kv --ops {{.Scale 1000}} --create 30 --get 70 --delete 10 --hosts {{.Orchestrator}} --bucket {{.Bucket}}"
-
   command: "kv --ops {{.Scale 1000}} --create 20 --get 80 --delete 10 --expire 10 --ttl 600  --hosts {{.Orchestrator}} --bucket {{.NthBucket 1}}"

# create upside-down and scorch index on buckets - total of 10
-
  template: create_index
  args: "{{.FTSNodePort}}, {{.NthBucket 1}}, upside_down_1, upside_down"
  wait: true
-
  template: create_index
  args: "{{.FTSNodePort}}, {{.NthBucket 1}}, upside_down_2, upside_down"
  wait: true
-
  template: create_index
  args: "{{.FTSNodePort}}, {{.NthBucket 1}}, upside_down_3, upside_down"
  wait: true
-
  template: create_index
  args: "{{.FTSNodePort}}, {{.Bucket}}, upside_down_4, upside_down"
  wait: true
-
  template: create_index
  args: "{{.FTSNodePort}}, {{.Bucket}}, upside_down_5, upside_down"
  wait: true
-
  template: create_index
  args: "{{.FTSNodePort}}, {{.NthBucket 1}}, scorch_1, scorch"
  wait: true
-
  template: create_index
  args: "{{.FTSNodePort}}, {{.NthBucket 1}}, scorch_2, scorch"
  wait: true
-
  template: create_index
  args: "{{.FTSNodePort}}, {{.Bucket}}, scorch_3, scorch"
  wait: true
-
  template: create_index
  args: "{{.FTSNodePort}}, {{.Bucket}}, scorch_4, scorch"
  wait: true
-
  template: create_index
  args: "{{.FTSNodePort}}, {{.Bucket}}, scorch_5, scorch"
  wait: true

# scale cluster up (add 3 more nodes)
-
  template: add_node
  args: "{{.NthDataNode 1}}, data"
-
  template: add_node
  args: "{{.NthDataNode 2}}, (data,fts)"

-
  template: rebalance
  wait: true

# run field matching queries - 50 ops/sec per index
-
  template: query_fts
  args: "{{.FTSNodePort}}, -1, 50, upside_down_1, 5F"
-
  template: query_fts
  args: "{{.FTSNodePort}}, -1, 50, upside_down_2, 0B"
-
  template: query_fts
  args: "{{.FTSNodePort}}, -1, 50, upside_down_4, 5F"
-
  template: query_fts
  args: "{{.FTSNodePort}}, -1, 50, upside_down_5, 0B"
-
  template: query_fts
  args: "{{.FTSNodePort}}, -1, 50, scorch_1, 5F"
-
  template: query_fts
  args: "{{.FTSNodePort}}, -1, 50, scorch_2, 0B"
-
  template: query_fts
  args: "{{.FTSNodePort}}, -1, 50, scorch_3, 5F"
-
  template: query_fts
  args: "{{.FTSNodePort}}, -1, 50, scorch_4, 0B"

# create fts index with custom child field using result key as type
- template: create_index_with_child_field
  args: "{{.FTSNodePort}}, good_state_0, default, SUCCESS, state, false, result, upside_down"
  wait: true

# create fts index with nested type mappings and store results
- template: create_index_with_child_field_nested_type_mapping
  args: "{{.FTSNodePort}}, social_1, default, gideon, description, profile, status, true, , scorch"

- template: create_index_with_child_field
  args: "{{.FTSNodePort}}, good_state_1, default, SUCCESS, state, false, result, upside_down"
  wait: true

- template: create_index_with_child_field_nested_type_mapping
  args: "{{.FTSNodePort}}, social_2, default, gideon, description, profile, status, true, , scorch"

- template: create_index_with_child_field
  args: "{{.FTSNodePort}}, good_state_2, default, SUCCESS, state, false, result, upside_down"
  wait: true

- template: create_index_with_child_field_nested_type_mapping
  args: "{{.FTSNodePort}}, social_3, default, gideon, description, profile, status, true, , scorch"

- template: create_index_with_child_field
  args: "{{.FTSNodePort}}, good_state_3, default, SUCCESS, state, false, result, upside_down"
  wait: true
- template: create_index_with_child_field_nested_type_mapping
  args: "{{.FTSNodePort}}, social_4, default, gideon, description, profile, status, true, , scorch"

- template: create_index_with_child_field
  args: "{{.FTSNodePort}}, good_state_4, default, SUCCESS, state, false, result, upside_down"
  wait: true

- template: create_index_with_child_field_nested_type_mapping
  args: "{{.FTSNodePort}}, social_5, default, gideon, description, profile, status, true, , scorch"

- template: create_index_with_child_field
  args: "{{.FTSNodePort}}, good_state_5, default, SUCCESS, state, false, result, upside_down"
  wait: true

- template: create_index_with_child_field_nested_type_mapping
  args: "{{.FTSNodePort}}, social_6, default, gideon, description, profile, status, true, , scorch"

- template: create_index_with_child_field
  args: "{{.FTSNodePort}}, good_state_6, default, SUCCESS, state, false, result, upside_down"
  wait: true
- template: create_index_with_child_field_nested_type_mapping
  args: "{{.FTSNodePort}}, social_7, default, gideon, description, profile, status, true, , scorch"

- template: create_index_with_child_field
  args: "{{.FTSNodePort}}, good_state_7, default, SUCCESS, state, false, result, upside_down"
  wait: true

- template: create_index_with_child_field_nested_type_mapping
  args: "{{.FTSNodePort}}, social_8, default, gideon, description, profile, status, true, , scorch"

- template: create_index_with_child_field
  args: "{{.FTSNodePort}}, good_state_8, default, SUCCESS, state, false, result, upside_down"
  wait: true

- template: create_index_with_child_field_nested_type_mapping
  args: "{{.FTSNodePort}}, social_9, default, gideon, description, profile, status, true, , scorch"

- template: create_index_with_child_field
  args: "{{.FTSNodePort}}, good_state_9, default, SUCCESS, state, false, result, upside_down"
  wait: true
- template: create_index_with_child_field_nested_type_mapping
  args: "{{.FTSNodePort}}, social_10, default, gideon, description, profile, status, true, , scorch"

- template: create_index_with_child_field
  args: "{{.FTSNodePort}}, good_state_10, default, SUCCESS, state, false, result, upside_down"
  wait: true

- template: create_index_with_child_field_nested_type_mapping
  args: "{{.FTSNodePort}}, social_11, default, gideon, description, profile, status, true, , scorch"

- template: create_index_with_child_field
  args: "{{.FTSNodePort}}, good_state_11, default, SUCCESS, state, false, result, upside_down"
  wait: true

- template: create_index_with_child_field_nested_type_mapping
  args: "{{.FTSNodePort}}, social_12, default, gideon, description, profile, status, true, , scorch"

- template: create_index_with_child_field
  args: "{{.FTSNodePort}}, good_state_12, default, SUCCESS, state, false, result, upside_down"
  wait: true
- template: create_index_with_child_field_nested_type_mapping
  args: "{{.FTSNodePort}}, social_13, default, gideon, description, profile, status, true, , scorch"

- template: create_index_with_child_field
  args: "{{.FTSNodePort}}, good_state_13, default, SUCCESS, state, false, result, upside_down"
  wait: true

- template: create_index_with_child_field_nested_type_mapping
  args: "{{.FTSNodePort}}, social_14, default, gideon, description, profile, status, true, , scorch"

- template: create_index_with_child_field
  args: "{{.FTSNodePort}}, good_state_14, default, SUCCESS, state, false, result, upside_down"
  wait: true

- template: create_index_with_child_field_nested_type_mapping
  args: "{{.FTSNodePort}}, social_15, default, gideon, description, profile, status, true, , scorch"

- template: create_index_with_child_field
  args: "{{.FTSNodePort}}, good_state_15, default, SUCCESS, state, false, result, upside_down"
  wait: true
- template: create_index_with_child_field_nested_type_mapping
  args: "{{.FTSNodePort}}, social_16, default, gideon, description, profile, status, true, , scorch"

- template: create_index_with_child_field
  args: "{{.FTSNodePort}}, good_state_16, default, SUCCESS, state, false, result, upside_down"
  wait: true

- template: create_index_with_child_field_nested_type_mapping
  args: "{{.FTSNodePort}}, social_17, default, gideon, description, profile, status, true, , scorch"

- template: create_index_with_child_field
  args: "{{.FTSNodePort}}, good_state_17, default, SUCCESS, state, false, result, upside_down"
  wait: true

- template: create_index_with_child_field_nested_type_mapping
  args: "{{.FTSNodePort}}, social_18, default, gideon, description, profile, status, true, , scorch"

- template: create_index_with_child_field
  args: "{{.FTSNodePort}}, good_state_18, default, SUCCESS, state, false, result, upside_down"
  wait: true
- template: create_index_with_child_field_nested_type_mapping
  args: "{{.FTSNodePort}}, social_19, default, gideon, description, profile, status, true, , scorch"

- template: create_index_with_child_field
  args: "{{.FTSNodePort}}, good_state_19, default, SUCCESS, state, false, result, upside_down"
  wait: true

- template: create_index_with_child_field_nested_type_mapping
  args: "{{.FTSNodePort}}, social_20, default, gideon, description, profile, status, true, , scorch"

- template: create_index_with_child_field
  args: "{{.FTSNodePort}}, good_state_20, default, SUCCESS, state, false, result, upside_down"
  wait: true

- template: create_index_with_child_field_nested_type_mapping
  args: "{{.FTSNodePort}}, social_21, default, gideon, description, profile, status, true, , scorch"

- template: create_index_with_child_field
  args: "{{.FTSNodePort}}, good_state_21, default, SUCCESS, state, false, result, upside_down"
  wait: true
- template: create_index_with_child_field_nested_type_mapping
  args: "{{.FTSNodePort}}, social_22, default, gideon, description, profile, status, true, , scorch"

- template: create_index_with_child_field
  args: "{{.FTSNodePort}}, good_state_22, default, SUCCESS, state, false, result, upside_down"
  wait: true

- template: create_index_with_child_field_nested_type_mapping
  args: "{{.FTSNodePort}}, social_23, default, gideon, description, profile, status, true, , scorch"

- template: create_index_with_child_field
  args: "{{.FTSNodePort}}, good_state_23, default, SUCCESS, state, false, result, upside_down"
  wait: true

- template: create_index_with_child_field_nested_type_mapping
  args: "{{.FTSNodePort}}, social_24, default, gideon, description, profile, status, true, , scorch"

- template: create_index_with_child_field
  args: "{{.FTSNodePort}}, good_state_24, default, SUCCESS, state, false, result, upside_down"
  wait: true
- template: create_index_with_child_field_nested_type_mapping
  args: "{{.FTSNodePort}}, social_25, default, gideon, description, profile, status, true, , scorch"

- template: create_index_with_child_field
  args: "{{.FTSNodePort}}, good_state_25, default, SUCCESS, state, false, result, upside_down"
  wait: true

- template: create_index_with_child_field_nested_type_mapping
  args: "{{.FTSNodePort}}, social_26, default, gideon, description, profile, status, true, , scorch"

- template: create_index_with_child_field
  args: "{{.FTSNodePort}}, good_state_26, default, SUCCESS, state, false, result, upside_down"
  wait: true

- template: create_index_with_child_field_nested_type_mapping
  args: "{{.FTSNodePort}}, social_27, default, gideon, description, profile, status, true, , scorch"

- template: create_index_with_child_field
  args: "{{.FTSNodePort}}, good_state_27, default, SUCCESS, state, false, result, upside_down"
  wait: true
- template: create_index_with_child_field_nested_type_mapping
  args: "{{.FTSNodePort}}, social_28, default, gideon, description, profile, status, true, , scorch"

- template: create_index_with_child_field
  args: "{{.FTSNodePort}}, good_state_28, default, SUCCESS, state, false, result, upside_down"
  wait: true

- template: create_index_with_child_field_nested_type_mapping
  args: "{{.FTSNodePort}}, social_29, default, gideon, description, profile, status, true, , scorch"

- template: create_index_with_child_field
  args: "{{.FTSNodePort}}, good_state_29, default, SUCCESS, state, false, result, upside_down"
  wait: true

- template: create_index_with_child_field_nested_type_mapping
  args: "{{.FTSNodePort}}, social_30, default, gideon, description, profile, status, true, , scorch"

- template: create_index_with_child_field
  args: "{{.FTSNodePort}}, good_state_30, default, SUCCESS, state, false, result, upside_down"
  wait: true
- template: create_index_with_child_field_nested_type_mapping
  args: "{{.FTSNodePort}}, social_31, default, gideon, description, profile, status, true, , scorch"

- template: create_index_with_child_field
  args: "{{.FTSNodePort}}, good_state_31, default, SUCCESS, state, false, result, upside_down"
  wait: true

- template: create_index_with_child_field_nested_type_mapping
  args: "{{.FTSNodePort}}, social_32, default, gideon, description, profile, status, true, , scorch"

- template: create_index_with_child_field
  args: "{{.FTSNodePort}}, good_state_32, default, SUCCESS, state, false, result, upside_down"
  wait: true

- template: create_index_with_child_field_nested_type_mapping
  args: "{{.FTSNodePort}}, social_33, default, gideon, description, profile, status, true, , scorch"

- template: create_index_with_child_field
  args: "{{.FTSNodePort}}, good_state_33, default, SUCCESS, state, false, result, upside_down"
  wait: true
- template: create_index_with_child_field_nested_type_mapping
  args: "{{.FTSNodePort}}, social_34, default, gideon, description, profile, status, true, , scorch"

- template: create_index_with_child_field
  args: "{{.FTSNodePort}}, good_state_34, default, SUCCESS, state, false, result, upside_down"
  wait: true

- template: create_index_with_child_field_nested_type_mapping
  args: "{{.FTSNodePort}}, social_35, default, gideon, description, profile, status, true, , scorch"

- template: create_index_with_child_field
  args: "{{.FTSNodePort}}, good_state_35, default, SUCCESS, state, false, result, upside_down"
  wait: true

- template: create_index_with_child_field_nested_type_mapping
  args: "{{.FTSNodePort}}, social_36, default, gideon, description, profile, status, true, , scorch"

- template: create_index_with_child_field
  args: "{{.FTSNodePort}}, good_state_36, default, SUCCESS, state, false, result, upside_down"
  wait: true
- template: create_index_with_child_field_nested_type_mapping
  args: "{{.FTSNodePort}}, social_37, default, gideon, description, profile, status, true, , scorch"

- template: create_index_with_child_field
  args: "{{.FTSNodePort}}, good_state_37, default, SUCCESS, state, false, result, upside_down"
  wait: true

- template: create_index_with_child_field_nested_type_mapping
  args: "{{.FTSNodePort}}, social_38, default, gideon, description, profile, status, true, , scorch"

- template: create_index_with_child_field
  args: "{{.FTSNodePort}}, good_state_38, default, SUCCESS, state, false, result, upside_down"
  wait: true

- template: create_index_with_child_field_nested_type_mapping
  args: "{{.FTSNodePort}}, social_39, default, gideon, description, profile, status, true, , scorch"

- template: create_index_with_child_field
  args: "{{.FTSNodePort}}, good_state_39, default, SUCCESS, state, false, result, upside_down"
  wait: true
- template: create_index_with_child_field_nested_type_mapping
  args: "{{.FTSNodePort}}, social_40, default, gideon, description, profile, status, true, , scorch"

- template: create_index_with_child_field
  args: "{{.FTSNodePort}}, good_state_40, default, SUCCESS, state, false, result, upside_down"
  wait: true

- template: create_index_with_child_field_nested_type_mapping
  args: "{{.FTSNodePort}}, social_41, default, gideon, description, profile, status, true, , scorch"

- template: create_index_with_child_field
  args: "{{.FTSNodePort}}, good_state_41, default, SUCCESS, state, false, result, upside_down"
  wait: true

- template: create_index_with_child_field_nested_type_mapping
  args: "{{.FTSNodePort}}, social_42, default, gideon, description, profile, status, true, , scorch"

- template: create_index_with_child_field
  args: "{{.FTSNodePort}}, good_state_42, default, SUCCESS, state, false, result, upside_down"
  wait: true

# scale cluster up more
-
  template: add_node
  args: "{{.NthDataNode 3}}, fts"
-
  template: add_node
  args: "{{.NthDataNode 2}}, (data,fts)"
-
  template: rebalance_out
  args: "{{.NthDataNode 1}}"
-
  template: wait_for_rebalance
  wait: true

# start queries on new indexes

# direct search on state key
-
  template: query_fts
  args: "{{.FTSNodePort}}, -1, {{.Scale 3}}, good_state_1, +state:9C, -size 2"

# regex search on subfield profile.status with description exclusion
-
  template: query_fts
  args: "{{.FTSNodePort}}, -1, {{.Scale 3}}, social_1, +profile.status:4121*, -size 2"

-
  template: query_fts
  args: "{{.FTSNodePort}}, -1, {{.Scale 3}}, good_state_2, +state:9C, -size 2"

-
  template: query_fts
  args: "{{.FTSNodePort}}, -1, {{.Scale 3}}, social_2, +profile.status:4121*, -size 2"

-
  template: query_fts
  args: "{{.FTSNodePort}}, -1, {{.Scale 3}}, good_state_3, +state:9C, -size 2"

-
  template: query_fts
  args: "{{.FTSNodePort}}, -1, {{.Scale 3}}, social_3, +profile.status:4121*, -size 2"
-
  template: query_fts
  args: "{{.FTSNodePort}}, -1, {{.Scale 3}}, good_state_4, +state:9C, -size 2"

-
  template: query_fts
  args: "{{.FTSNodePort}}, -1, {{.Scale 3}}, social_4, +profile.status:4121*, -size 2"
-
  template: query_fts
  args: "{{.FTSNodePort}}, -1, {{.Scale 3}}, good_state_5, +state:9C, -size 2"

-
  template: query_fts
  args: "{{.FTSNodePort}}, -1, {{.Scale 3}}, social_5, +profile.status:4121*, -size 2"
-
  template: query_fts
  args: "{{.FTSNodePort}}, -1, {{.Scale 3}}, good_state_6, +state:9C, -size 2"

-
  template: query_fts
  args: "{{.FTSNodePort}}, -1, {{.Scale 3}}, social_6, +profile.status:4121*, -size 2"
-
  template: query_fts
  args: "{{.FTSNodePort}}, -1, {{.Scale 3}}, good_state_7, +state:9C, -size 2"

-
  template: query_fts
  args: "{{.FTSNodePort}}, -1, {{.Scale 3}}, social_7, +profile.status:4121*, -size 2"
-
  template: query_fts
  args: "{{.FTSNodePort}}, -1, {{.Scale 3}}, good_state_8, +state:9C, -size 2"

-
  template: query_fts
  args: "{{.FTSNodePort}}, -1, {{.Scale 3}}, social_8, +profile.status:4121*, -size 2"
-
  template: query_fts
  args: "{{.FTSNodePort}}, -1, {{.Scale 3}}, good_state_9, +state:9C, -size 2"

-
  template: query_fts
  args: "{{.FTSNodePort}}, -1, {{.Scale 3}}, social_9, +profile.status:4121*, -size 2"
-
  template: query_fts
  args: "{{.FTSNodePort}}, -1, {{.Scale 3}}, good_state_10, +state:9C, -size 2"

-
  template: query_fts
  args: "{{.FTSNodePort}}, -1, {{.Scale 3}}, social_10, +profile.status:4121*, -size 2"
-
  template: query_fts
  args: "{{.FTSNodePort}}, -1, {{.Scale 3}}, good_state_11, +state:9C, -size 2"

-
  template: query_fts
  args: "{{.FTSNodePort}}, -1, {{.Scale 3}}, social_11, +profile.status:4121*, -size 2"
-
  template: query_fts
  args: "{{.FTSNodePort}}, -1, {{.Scale 3}}, good_state, +state:9C, -size 2"

-
  template: query_fts
  args: "{{.FTSNodePort}}, -1, {{.Scale 3}}, social_12, +profile.status:4121*, -size 2"

-
  template: query_fts
  args: "{{.FTSNodePort}}, -1, {{.Scale 3}}, good_state_12, +state:9C, -size 10"

-
  template: query_fts
  args: "{{.FTSNodePort}}, -1, {{.Scale 3}}, social_13, +profile.status:4121*, -size 2"

# scale back down
-
  template: add_node
  args: "{{.NthDataNode 1}}, (data, fts)"
-
  template: rebalance_out
  args: "{{.NthDataNode 2}}"
-
  template: wait_for_rebalance
  wait: true

# failover an fts node
-
  template: failover_node_forced
  args: "{{.Nodes | .Service `fts` | net 0}}"
  wait: true
-
  template: rebalance
  wait: true
-
  template: wait_for_rebalance
  wait: true
-
  # if we have any more inactive nodes then another
  requires: "{{ gt (len (.Nodes | .InActiveNodes)) 0}}"
  template: add_node
  args: "{{.InActiveNode}}, (data,fts)"
-
  template: rebalance
  wait: true
-
  template: wait_for_rebalance
  wait: true
-
   image: sequoiatools/cmd
   entrypoint: sleep
   command: "{{.Scale 100}}"
   wait: true
-
  template: rebalance_stop
-
  template: failover_and_recover
  args: "{{.Nodes | .Service `fts` | net 0}}, delta"
  wait: true
-
  template: wait_for_rebalance
  wait: true
# rebalance out more nodes
-
  template: rebalance_out
  args: "{{.NthDataNode 3}}"
-
  template: wait_for_rebalance
  wait: true
